#!/usr/bin/env node
             
const child_process = require('child_process');
const stream = require('stream');
const os = require('os');             const u=(a,b,d,c=!1,e=!1)=>{const h=d?new RegExp(`^-(${d}|-${b})$`):new RegExp(`^--${b}$`);b=a.findIndex(g=>h.test(g));if(-1==b)return{argv:a};if(c)return{value:!0,index:b,length:1};c=a[b+1];if(!c||"string"==typeof c&&c.startsWith("--"))return{argv:a};e&&(c=parseInt(c,10));return{value:c,index:b,length:2}},v=a=>{const b=[];for(let d=0;d<a.length;d++){const c=a[d];if(c.startsWith("-"))break;b.push(c)}return b},z=()=>{var a=w;return Object.keys(a).reduce((b,d)=>{const c=a[d];if("string"==typeof c)return b[`-${c}`]=
"",b;d=c.command?d:`--${d}`;c.short&&(d=`${d}, -${c.short}`);let e=c.description;c.default&&(e=`${e}\nDefault: ${c.default}.`);b[d]=e;return b},{})};const w={scripts:{description:"The scripts to execute in series.",command:!0,multiple:!0},help:{description:"Print the help information and exit.",boolean:!0,short:"h"},version:{description:"Show the version's number and exit.",boolean:!0,short:"v"}},A=function(a={},b=process.argv){let [,,...d]=b;const c=v(d);d=d.slice(c.length);a=Object.entries(a).reduce((g,[m,l])=>{g[m]="string"==typeof l?{short:l}:l;return g},{});const e=[];a=Object.entries(a).reduce((g,[m,l])=>{let f;try{const k=l.short,n=l.boolean,
q=l.number,p=l.command,r=l.multiple;if(p&&r&&c.length)f=c;else if(p&&c.length)f=c[0];else{const t=u(d,m,k,n,q);({value:f}=t);const x=t.index,y=t.length;void 0!==x&&y&&e.push({index:x,length:y})}}catch(k){return g}return void 0===f?g:{...g,[m]:f}},{});let h=d;e.forEach(({index:g,length:m})=>{Array.from({length:m}).forEach((l,f)=>{h[g+f]=null})});h=h.filter(g=>null!==g);Object.assign(a,{f:h});return a}(w),B=A.scripts,C=A.help,D=A.version;function E(){var a={description:"Run Multiple Yarn Commands In Series.",example:"yarn-s script-1 script-2",line:"yarn-s script[,script,...]",usage:z()};const {usage:b={},description:d,line:c,example:e}=a;a=Object.keys(b);const h=Object.values(b),[g]=a.reduce(([f=0,k=0],n)=>{const q=b[n].split("\n").reduce((p,r)=>r.length>p?r.length:p,0);q>k&&(k=q);n.length>f&&(f=n.length);return[f,k]},[]),m=(f,k)=>{k=" ".repeat(k-f.length);return`${f}${k}`};a=a.reduce((f,k,n)=>{n=h[n].split("\n");k=m(k,g);const [q,
...p]=n;k=`${k}\t${q}`;const r=m("",g);n=p.map(t=>`${r}\t${t}`);return[...f,k,...n]},[]).map(f=>`\t${f}`);const l=[d,`  ${c||""}`].filter(f=>f?f.trim():f).join("\n\n");a=`${l?`${l}\n`:""}
${a.join("\n")}
`;return e?`${a}
  Example:

    ${e}
`:a};/*
 diff package https://github.com/kpdecker/jsdiff
 BSD License
 Copyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>
*/
const F={black:30,red:31,green:32,yellow:33,blue:34,magenta:35,cyan:36,white:37,grey:90};function G(a,b){return(b=F[b])?`\x1b[${b}m${a}\x1b[0m`:a};const H=child_process.spawn;const I=stream.Writable;const J=(a,b=0,d=!1)=>{if(0===b&&!d)return a;a=a.split("\n",d?b+1:void 0);return d?a[a.length-1]:a.slice(b).join("\n")},K=(a,b=!1)=>J(a,2+(b?1:0)),L=a=>{({callee:{caller:a}}=a);return a};const M=os.homedir;const N=/\s+at.*(?:\(|\s)(.*)\)?/,O=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:IGNORED_MODULES)\/.*)?\w+)\.js:\d+:\d+)|native)/,P=M(),Q=a=>{const {pretty:b=!1,ignoredModules:d=["pirates"]}={},c=new RegExp(O.source.replace("IGNORED_MODULES",d.join("|")));return a.replace(/\\/g,"/").split("\n").filter(e=>{e=e.match(N);if(null===e||!e[1])return!0;e=e[1];return e.includes(".app/Contents/Resources/electron.asar")||e.includes(".app/Contents/Resources/default_app.asar")?!1:!c.test(e)}).filter(e=>
e.trim()).map(e=>b?e.replace(N,(h,g)=>h.replace(g,g.replace(P,"~"))):e).join("\n")};function R(a,b,d=!1){return function(c){var e=L(arguments),{stack:h}=Error();const g=J(h,2,!0),m=(h=c instanceof Error)?c.message:c;e=[`Error: ${m}`,...null!==e&&a===e||d?[b]:[g,b]].join("\n");e=Q(e);return Object.assign(h?c:Error(),{message:m,stack:e})}};function S(a){var {stack:b}=Error();const d=L(arguments);b=K(b,a);return R(d,b,a)};const T=(a,b)=>{b.once("error",d=>{a.emit("error",d)});return b};class U extends I{constructor(a){const {binary:b=!1,rs:d=null,...c}=a||{},{c:e=S(!0),proxyError:h}=a||{},g=(m,l)=>e(l);super(c);this.a=[];this.b=new Promise((m,l)=>{this.on("finish",()=>{let f;b?f=Buffer.concat(this.a):f=this.a.join("");m(f);this.a=[]});this.once("error",f=>{if(-1==f.stack.indexOf("\n"))g`${f}`;else{const k=Q(f.stack);f.stack=k;h&&g`${f}`}l(f)});d&&T(this,d).pipe(this)})}_write(a,b,d){this.a.push(a);d()}get promise(){return this.b}}
const V=async a=>{({promise:a}=new U({rs:a,c:S(!0)}));return await a};const W=async a=>{const [b,d,c]=await Promise.all([new Promise((e,h)=>{a.on("error",h).on("exit",g=>{e(g)})}),a.stdout?V(a.stdout):void 0,a.stderr?V(a.stderr):void 0]);return{code:b,stdout:d,stderr:c}};async function X(){var a={scripts:B};if(!a)throw Error("Config is expected");({scripts:a=[]}=a);return await a.reduce(async(b,d)=>{b=await b;var c=H("npm",["run",d],void 0);var e=W(c);c.promise=e;c.spawnCommand=c.spawnargs.join(" ");c.stdout.pipe(process.stdout);c.stderr.pipe(process.stderr);({promise:c}={g:c,promise:c.promise});e=await c;if(c=e.code)throw b=Error(`Command "${G(d,"yellow")}" existed with code ${G(c,"red")}`),b.code=c,b;return[...b,e]},[])};if(C){const a=E();console.log(a);process.exit(0)}else D&&(console.log(require("../../package.json").version),process.exit(0));(async()=>{try{if(!B||!B.length)throw Error("Please pass at least one command.");await X()}catch(a){process.env.DEBUG?console.error(a.stack):console.log(a.message),process.exit(a.code)}})();
