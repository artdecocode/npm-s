#!/usr/bin/env node
             
const child_process = require('child_process');
const stream = require('stream');
const os = require('os');             /*
 diff package https://github.com/kpdecker/jsdiff
 BSD License
 Copyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>
*/
const m={black:30,red:31,green:32,yellow:33,blue:34,magenta:35,cyan:36,white:37,grey:90};function n(a,b){return(b=m[b])?`\x1b[${b}m${a}\x1b[0m`:a};const p=child_process.spawn;const q=stream.Writable;const r=(a,b=0,d=!1)=>{if(0===b&&!d)return a;a=a.split("\n",d?b+1:void 0);return d?a[a.length-1]:a.slice(b).join("\n")},t=(a,b=!1)=>r(a,2+(b?1:0)),u=a=>{({callee:{caller:a}}=a);return a};const v=os.homedir;const w=/\s+at.*(?:\(|\s)(.*)\)?/,x=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:IGNORED_MODULES)\/.*)?\w+)\.js:\d+:\d+)|native)/,y=v(),z=a=>{const {pretty:b=!1,ignoredModules:d=["pirates"]}={},e=new RegExp(x.source.replace("IGNORED_MODULES",d.join("|")));return a.replace(/\\/g,"/").split("\n").filter(c=>{c=c.match(w);if(null===c||!c[1])return!0;c=c[1];return c.includes(".app/Contents/Resources/electron.asar")||c.includes(".app/Contents/Resources/default_app.asar")?!1:!e.test(c)}).filter(c=>
c.trim()).map(c=>b?c.replace(w,(f,g)=>f.replace(g,g.replace(y,"~"))):c).join("\n")};function A(a,b,d=!1){return function(e){var c=u(arguments),{stack:f}=Error();const g=r(f,2,!0),k=(f=e instanceof Error)?e.message:e;c=[`Error: ${k}`,...null!==c&&a===c||d?[b]:[g,b]].join("\n");c=z(c);return Object.assign(f?e:Error(),{message:k,stack:c})}};function B(a){var {stack:b}=Error();const d=u(arguments);b=t(b,a);return A(d,b,a)};const C=(a,b)=>{b.once("error",d=>{a.emit("error",d)});return b};class D extends q{constructor(a){const {binary:b=!1,rs:d=null,...e}=a||{},{c=B(!0),proxyError:f}=a||{},g=(k,l)=>c(l);super(e);this.a=[];this.b=new Promise((k,l)=>{this.on("finish",()=>{let h;b?h=Buffer.concat(this.a):h=this.a.join("");k(h);this.a=[]});this.once("error",h=>{if(-1==h.stack.indexOf("\n"))g`${h}`;else{const F=z(h.stack);h.stack=F;f&&g`${h}`}l(h)});d&&C(this,d).pipe(this)})}_write(a,b,d){this.a.push(a);d()}get promise(){return this.b}}
const E=async a=>{({promise:a}=new D({rs:a,c:B(!0)}));return await a};const G=async a=>{const [b,d,e]=await Promise.all([new Promise((c,f)=>{a.on("error",f).on("exit",g=>{c(g)})}),a.stdout?E(a.stdout):void 0,a.stderr?E(a.stderr):void 0]);return{code:b,stdout:d,stderr:e}};const H=(a,b=[])=>{a=["run",a,...b];a=p("npm",a,{shell:"win32"==process.platform});b=G(a);a.promise=b;a.spawnCommand=a.spawnargs.join(" ");a.stdout.pipe(process.stdout);a.stderr.pipe(process.stderr);return{f:a,promise:a.promise}};module.exports={_npmS:async function(a){if(!a)throw Error("Config is expected");const {scripts:b=[],args:d}=a;return await b.reduce(async(e,c)=>{e=await e;var {promise:f}=H(c,d);const g=await f;if(f=g.code)throw e=Error(`Command "${n(c,"yellow")}" existed with code ${n(f,"red")}`),e.code=f,e;return[...e,g]},[])}};

//# sourceMappingURL=npm-s.js.map